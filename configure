#!/bin/bash

[ ! -d dep ] && echo -e "\e[33mconfigure must be run from base uinta directory" && return
cd dep

git submodule update --init --recursive --jobs 12

### GLFW
[ ! -d glfw ] && >&2 echo -e "\e[33mdep/glfw missing" && return
mkdir glfw/build 2> /dev/null
cmake -dCMAKE_BUILD_TYPE=RELEASE -B glfw/build -S glfw
make --directory glfw/build -j 32


### GLAD
if ! command -v glad &> /dev/null
then
	# TODO	This seems wrong to expect glad to be in the path.
	#       See if building from dep folder would create a glad executable.
	#       That would also remove the need to run a `sudo` command.
	echo -e "\e[33m`glad` command not found. Install glad by running `cd dep/glad && sudo python setup.py install`, then re-run this configuration."
	return
fi
glad --profile core --out-path glad/build --api gles2=3.2 --spec gl --generator c


### Assimp has a unique build, so we follow their script then reset the git state:
#[ ! -d log4cplus ] && >&2 echo -e "\e[33mdep/log4cplus missing" && return
#cd log4cplus
#git submodule update --init --recursive
#./configure
#make -j 32
## log4cplus creates a bunch of files while building...
## this will remove the files, and clear the git submodule dirty state
#git add . && git reset --hard
#cd ..

cd ..

echo "Configuration successfully completed."
